{"version":3,"file":"static/js/593.fc6707d9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.js","components/ModalContact/ModalContact.styled.js","components/ModalContact/ModalContact.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","redux/filter/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { HiX } from 'react-icons/hi';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 5px;\n  background-color: #ff98471a;\n  outline: none;\n  &:focus {\n    border: 1px solid #ff4500;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n\n  border: none;\n  color: black;\n  background-color: #fff;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  font-weight: 700;\n  margin: auto;\n  &:hover {\n    box-shadow: none;\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const ButtonIcon = styled.button`\n  margin-left: auto;\n  display: flex;\n  padding: 5px 5px;\n  border-radius: 50px;\n  color: orangered;\n  background-color: #fff;\n\n  border: none;\n\n  font-weight: 700;\n  &:hover {\n    box-shadow: none;\n    color: #fff;\n    background-color: orangered;\n    box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Icon = styled(HiX)`\n  width: 20px;\n  height: 20px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  Icon,\n  ButtonIcon,\n} from './ContactForm.styled';\n\nexport const ContactForm = ({ onSave }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const {\n      elements: {\n        name: { value: name },\n        number: { value: number },\n      },\n    } = event.currentTarget;\n\n    const contact = { name, number };\n\n    const notDuplicationName = contacts.find(contact => contact.name === name);\n    notDuplicationName !== undefined\n      ? alert(`\"${name}\" is already in contacts.`)\n      : dispatch(addContact(contact));\n\n    event.currentTarget.reset();\n    onSave();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ButtonIcon type=\"button\" onClick={onSave}>\n        <Icon />\n      </ButtonIcon>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nimport { HiX } from 'react-icons/hi';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 5px;\n  background-color: #ff98471a;\n  outline: none;\n  &:focus {\n    border: 1px solid #ff4500;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n\n  border: none;\n  color: black;\n  background-color: #fff;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  font-weight: 700;\n  margin: auto;\n  &:hover {\n    box-shadow: none;\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const ButtonIcon = styled.button`\n  margin-left: auto;\n  display: flex;\n  padding: 5px 5px;\n  border-radius: 50px;\n  color: orangered;\n  background-color: #fff;\n\n  border: none;\n\n  font-weight: 700;\n  &:hover {\n    box-shadow: none;\n    color: #fff;\n    background-color: orangered;\n    box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Icon = styled(HiX)`\n  width: 20px;\n  height: 20px;\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  Icon,\n  ButtonIcon,\n} from './EditForm.styled';\n\nexport const EditForm = ({ onSave, values }) => {\n  const { id } = values;\n  const [name, setName] = useState(values.name);\n  const [number, setNumber] = useState(values.number);\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = { id, name, number };\n    const notDuplicationName = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n    notDuplicationName !== undefined\n      ? alert(`\"${name}\" and \"${number}\" is already in contacts.`)\n      : dispatch(editContact(contact));\n\n    event.currentTarget.reset();\n    onSave();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ButtonIcon type=\"button\" onClick={onSave}>\n        <Icon />\n      </ButtonIcon>\n      <Label>\n        Name\n        <Input\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Edit contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  background-color: #fff;\n  padding: 30px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Modal, Overlay } from './ModalContact.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalContact = ({ onClose, edit, values }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', clickCloseModal);\n    return () => {\n      window.removeEventListener('keydown', clickCloseModal);\n    };\n  });\n  const clickCloseModal = event => {\n    if (event.code === 'Escape' || event.target === event.currentTarget) {\n      return onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={clickCloseModal}>\n      <Modal>\n        {!edit ? (\n          <ContactForm onSave={onClose} />\n        ) : (\n          <EditForm onSave={onClose} values={values} />\n        )}\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport { RiDeleteBin2Fill, RiEdit2Line } from 'react-icons/ri';\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 600px;\n  background-color: #ff98471a;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n`;\nexport const Button = styled.button`\n  padding: 5px 10px;\n  border-radius: 6px;\n\n  border: none;\n  color: black;\n  background-color: #fff;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  font-weight: 700;\n  &:hover {\n    box-shadow: none;\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const IconDelete = styled(RiDeleteBin2Fill)`\n  width: 30px;\n  height: 30px;\n`;\nexport const IconEdit = styled(RiEdit2Line)`\n  width: 30px;\n  height: 30px;\n`;\n","import { ModalContact } from 'components/ModalContact/ModalContact';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Item, Button, Wrap, IconEdit, IconDelete } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const toggleModal = () => setOpenModal(state => !state);\n  const dispatch = useDispatch();\n  return (\n    <Item>\n      <Wrap>\n        <p>{contact.name}:</p>\n        <p>{contact.number}</p>\n      </Wrap>\n      <Wrap>\n        <Button type=\"button\" onClick={toggleModal}>\n          <IconEdit />\n        </Button>\n\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contact.id))}\n        >\n          <IconDelete />\n        </Button>\n      </Wrap>\n      {openModal && (\n        <ModalContact onClose={toggleModal} edit={true} values={contact} />\n      )}\n    </Item>\n  );\n};\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 0;\n  margin: 0;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredPhoneBook = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  return (\n    <List>\n      {filteredPhoneBook.map(contact => {\n        return <ContactItem key={contact.id} contact={contact} />;\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 20px;\n  font-weight: 700;\n  gap: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  outline: none;\n  box-shadow: none;\n  border-bottom: 3px solid #000;\n\n  &:focus {\n    border-bottom: 3px solid #ff4500;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice';\n\nimport { Label, Input, Form } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Form>\n      <Label>\n        <Input\n          type=\"text\"\n          value={filter}\n          placeholder=\"Search\"\n          onChange={changeFilter}\n        ></Input>\n      </Label>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nimport { HiPlusSm } from 'react-icons/hi';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Button = styled.button`\n  display: flex;\n  padding: 5px 5px;\n  border-radius: 50px;\n  border: none;\n  color: #fff;\n  background-color: orangered;\n  font-weight: 700;\n  &:hover {\n    box-shadow: none;\n    color: orangered;\n    background-color: #fff;\n    box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Icon = styled(HiPlusSm)`\n  width: 60px;\n  height: 60px;\n`;\n","// import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ModalContact } from 'components/ModalContact/ModalContact';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Button, Container, Icon, Wrap } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const [openModal, setOpenModal] = useState(false);\n  const toggleModal = () => setOpenModal(state => !state);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Button type=\"button\" onClick={toggleModal}>\n          <Icon />\n        </Button>\n        <Wrap>\n          <Filter />\n          {isLoading && !error && (\n            <Wrap>\n              <b>Request in progress...</b>\n            </Wrap>\n          )}\n          <ContactList />\n        </Wrap>\n        {openModal && <ModalContact onClose={toggleModal} />}\n      </Container>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","Form","styled","Label","Input","Button","ButtonIcon","Icon","HiX","ContactForm","onSave","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","currentTarget","elements","name","value","number","contact","notDuplicationName","find","undefined","alert","addContact","reset","type","onClick","pattern","title","required","EditForm","values","id","useState","setName","setNumber","handleChange","target","editContact","onChange","Overlay","Modal","modalRoot","document","querySelector","ModalContact","onClose","edit","useEffect","window","addEventListener","clickCloseModal","removeEventListener","code","createPortal","Item","Wrap","IconDelete","RiDeleteBin2Fill","IconEdit","RiEdit2Line","ContactItem","openModal","setOpenModal","toggleModal","deleteContact","selectFilter","filter","List","ContactList","filteredPhoneBook","toLowerCase","includes","trim","map","Filter","placeholder","setFilter","Container","HiPlusSm","Contacts","fetchContacts"],"sourceRoot":""}