{"version":3,"file":"static/js/424.067b8612.chunk.js","mappings":"8PAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,ECJnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,E,6BCGpBC,EAAOC,EAAAA,GAAAA,GAAH,+KAWJC,EAAOD,EAAAA,GAAAA,GAAH,gXAcJE,EAAOF,EAAAA,GAAAA,IAAH,gFAKJG,EAASH,EAAAA,GAAAA,OAAH,0XAgBNI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,yD,SC1CJM,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXjB,GAAWkB,EAAAA,EAAAA,IAAYpB,GACvBS,GAASW,EAAAA,EAAAA,IAAYZ,GAErBa,EAAoBnB,EAASO,QAAO,qBAAGa,KACtCC,cAAcC,SAASf,EAAOc,cAAcE,OADT,IAI1C,OACE,SAACf,EAAD,UACGW,EAAkBK,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIL,EAAmB,EAAnBA,KAAMM,EAAa,EAAbA,OAClC,OACE,UAAChB,EAAD,YACE,UAACC,EAAD,YACE,yBAAIS,EAAJ,QACA,uBAAIM,QAEN,SAACf,EAAD,WACE,SAACC,EAAD,CAAQe,KAAK,SAASC,QAAS,kBAAMZ,GAASa,EAAAA,EAAAA,IAAcJ,GAA7B,EAA/B,UACE,SAACZ,EAAD,UAPKY,EAYd,KAGN,E,UCjCYK,EAAOrB,EAAAA,GAAAA,KAAH,4HAQJsB,EAAQtB,EAAAA,GAAAA,MAAH,oQAaLuB,EAAQvB,EAAAA,GAAAA,MAAH,iHCjBLwB,EAAS,WACpB,IAAM1B,GAASW,EAAAA,EAAAA,IAAYZ,GAErBU,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAACa,EAAD,WACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEL,KAAK,OACLO,MAAO3B,EACP4B,YAAY,wBACZC,SAZa,SAAAC,GACnB,IAAQH,EAAUG,EAAMC,OAAhBJ,MACRlB,GAASuB,EAAAA,EAAAA,IAAUL,GACpB,OAcF,E,UCzBYJ,EAAOrB,EAAAA,GAAAA,KAAH,sFAMJsB,EAAQtB,EAAAA,GAAAA,MAAH,0MAWLuB,EAAQvB,EAAAA,GAAAA,MAAH,iFAMLG,EAASH,EAAAA,GAAAA,OAAH,2YAiBN+B,EAAa/B,EAAAA,GAAAA,OAAH,2aAmBVI,GAAOJ,EAAAA,EAAAA,IAAOgC,EAAAA,IAAPhC,CAAH,yDCjDJiC,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB3C,GAAWkB,EAAAA,EAAAA,IAAYpB,GACvBkB,GAAWC,EAAAA,EAAAA,MAuBjB,OACE,UAAC,EAAD,CAAM2B,SAtBa,SAAAP,GACnBA,EAAMQ,iBAEN,MAKIR,EAAMS,cAJRC,SACiB3B,EAFnB,EAEIA,KAAQc,MACSR,EAHrB,EAGIA,OAAUQ,MAIRc,EAAU,CAAE5B,KAAAA,EAAMM,OAAAA,GAElBuB,EAAqBjD,EAASkD,MAAK,SAAAF,GAAO,OAAIA,EAAQ5B,OAASA,CAArB,SACzB+B,IAAvBF,EACIG,MAAM,IAAD,OAAKhC,EAAL,8BACLJ,GAASqC,EAAAA,EAAAA,IAAWL,IAExBX,EAAMS,cAAcQ,QACpBX,GACD,EAGC,WACE,SAACH,EAAD,CAAYb,KAAK,SAASC,QAASe,EAAnC,UACE,SAAC,EAAD,OAEF,UAAC,EAAD,mBAEE,SAAC,EAAD,CACEhB,KAAK,OACLP,KAAK,OACLmC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC,EAAD,qBAEE,SAAC,EAAD,CACE9B,KAAK,MACLP,KAAK,SACLmC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC,EAAD,CAAQ9B,KAAK,SAAb,2BAGL,E,qBChEY+B,GAAUjD,EAAAA,GAAAA,IAAH,uOAaPkD,GAAQlD,EAAAA,GAAAA,IAAH,qECVZmD,GAAYC,SAASC,cAAc,eAE5BC,GAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SAC7BC,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,EACvC,CACF,IACD,IAAMA,EAAkB,SAAA/B,GACtB,GAAmB,WAAfA,EAAMiC,MAAqBjC,EAAMC,SAAWD,EAAMS,cACpD,OAAOkB,GAEV,EAED,OAAOO,EAAAA,GAAAA,eACL,SAACb,GAAD,CAAS9B,QAASwC,EAAlB,UACE,SAACT,GAAD,WACE,SAACjB,EAAD,CAAaC,OAAQqB,QAGzBJ,GAEH,ECzBYY,GAAY/D,EAAAA,GAAAA,IAAH,qJAQTE,GAAOF,EAAAA,GAAAA,IAAH,6FAKJG,GAASH,EAAAA,GAAAA,OAAH,iZAgBNI,IAAOJ,EAAAA,EAAAA,IAAOgE,EAAAA,IAAPhE,CAAH,yDCtBF,SAASiE,KACtB,IAAM1D,GAAWC,EAAAA,EAAAA,MACXd,GAAYe,EAAAA,EAAAA,IAAYhB,GAE9B,GAAkCyE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAc,kBAAMD,GAAa,SAAA9E,GAAK,OAAKA,CAAL,GAAxB,EACdM,GAAQa,EAAAA,EAAAA,IAAYd,GAM1B,OAJA6D,EAAAA,EAAAA,YAAU,WACRjD,GAAS+D,EAAAA,EAAAA,MACV,GAAE,CAAC/D,KAGF,+BACE,UAACwD,GAAD,YACE,SAAC,GAAD,CAAQ7C,KAAK,SAASC,QAASkD,EAA/B,UACE,SAAC,GAAD,OAEF,UAAC,GAAD,YACE,SAAC7C,EAAD,IACC9B,IAAcE,IACb,SAAC,GAAD,WACE,qDAGJ,SAACU,EAAD,OAED6D,IAAa,SAACb,GAAD,CAAcC,QAASc,QAI5C,C","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ModalContact/ModalContact.styled.js","components/ModalContact/ModalContact.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\nimport { MdDeleteForever } from 'react-icons/md';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 600px;\n  background-color: #ff98471a;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n`;\nexport const Button = styled.button`\n  padding: 5px 10px;\n  border-radius: 6px;\n\n  border: none;\n  color: black;\n  background-color: #fff;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  font-weight: 700;\n  &:hover {\n    box-shadow: none;\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const Icon = styled(MdDeleteForever)`\n  width: 30px;\n  height: 30px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { List, Item, Button, Wrap, Icon } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredPhoneBook = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  return (\n    <List>\n      {filteredPhoneBook.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <Wrap>\n              <p>{name}:</p>\n              <p>{number}</p>\n            </Wrap>\n            <Wrap>\n              <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                <Icon />\n              </Button>\n            </Wrap>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 20px;\n  font-weight: 700;\n  gap: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 5px;\n  background-color: #ff98471a;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice';\n\nimport { Label, Input, Form } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Form>\n      <Label>\n        <Input\n          type=\"text\"\n          value={filter}\n          placeholder=\"Find contacts by name\"\n          onChange={changeFilter}\n        ></Input>\n      </Label>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\nimport { HiX } from 'react-icons/hi';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n\n  border: none;\n  color: black;\n  background-color: #fff;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  font-weight: 700;\n  margin: auto;\n  &:hover {\n    box-shadow: none;\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const ButtonIcon = styled.button`\n  margin-left: auto;\n  display: flex;\n  padding: 5px 5px;\n  border-radius: 50px;\n  color: orangered;\n  background-color: #fff;\n\n  border: none;\n\n  font-weight: 700;\n  &:hover {\n    box-shadow: none;\n    color: #fff;\n    background-color: orangered;\n    box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Icon = styled(HiX)`\n  width: 20px;\n  height: 20px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  Icon,\n  ButtonIcon,\n} from './ContactForm.styled';\n\nexport const ContactForm = ({ onSave }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const {\n      elements: {\n        name: { value: name },\n        number: { value: number },\n      },\n    } = event.currentTarget;\n\n    const contact = { name, number };\n\n    const notDuplicationName = contacts.find(contact => contact.name === name);\n    notDuplicationName !== undefined\n      ? alert(`\"${name}\" is already in contacts.`)\n      : dispatch(addContact(contact));\n\n    event.currentTarget.reset();\n    onSave();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <ButtonIcon type=\"button\" onClick={onSave}>\n        <Icon />\n      </ButtonIcon>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  background-color: #fff;\n  padding: 30px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Modal, Overlay } from './ModalContact.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalContact = ({ onClose }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', clickCloseModal);\n    return () => {\n      window.removeEventListener('keydown', clickCloseModal);\n    };\n  });\n  const clickCloseModal = event => {\n    if (event.code === 'Escape' || event.target === event.currentTarget) {\n      return onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={clickCloseModal}>\n      <Modal>\n        <ContactForm onSave={onClose} />\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport { HiPlusSm } from 'react-icons/hi';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Button = styled.button`\n  display: flex;\n  padding: 5px 5px;\n  border-radius: 50px;\n  border: none;\n  color: #fff;\n  background-color: orangered;\n  font-weight: 700;\n  &:hover {\n    box-shadow: none;\n    color: orangered;\n    background-color: #fff;\n    box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const Icon = styled(HiPlusSm)`\n  width: 60px;\n  height: 60px;\n`;\n","// import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ModalContact } from 'components/ModalContact/ModalContact';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Button, Container, Icon, Wrap } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const [openModal, setOpenModal] = useState(false);\n  const toggleModal = () => setOpenModal(state => !state);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Button type=\"button\" onClick={toggleModal}>\n          <Icon />\n        </Button>\n        <Wrap>\n          <Filter />\n          {isLoading && !error && (\n            <Wrap>\n              <b>Request in progress...</b>\n            </Wrap>\n          )}\n          <ContactList />\n        </Wrap>\n        {openModal && <ModalContact onClose={toggleModal} />}\n      </Container>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","List","styled","Item","Wrap","Button","Icon","MdDeleteForever","ContactList","dispatch","useDispatch","useSelector","filteredPhoneBook","name","toLowerCase","includes","trim","map","id","number","type","onClick","deleteContact","Form","Label","Input","Filter","value","placeholder","onChange","event","target","setFilter","ButtonIcon","HiX","ContactForm","onSave","onSubmit","preventDefault","currentTarget","elements","contact","notDuplicationName","find","undefined","alert","addContact","reset","pattern","title","required","Overlay","Modal","modalRoot","document","querySelector","ModalContact","onClose","useEffect","window","addEventListener","clickCloseModal","removeEventListener","code","createPortal","Container","HiPlusSm","Contacts","useState","openModal","setOpenModal","toggleModal","fetchContacts"],"sourceRoot":""}