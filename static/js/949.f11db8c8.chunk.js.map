{"version":3,"file":"static/js/949.f11db8c8.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/EditForm/EditForm.js","components/ModalContact/ModalContact.styled.js","components/ModalContact/ModalContact.js","components/ContactItem/ContactItem.js","redux/filter/selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { TextField, Button, IconButton, Icon } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledForm = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  '& .MuiTextField-root': {\n    margin: '10px',\n    width: '300px',\n  },\n  '& .MuiButton-root': {\n    margin: '20px',\n  },\n});\n\nexport const ContactForm = ({ onSave }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const {\n      elements: {\n        name: { value: name },\n        number: { value: number },\n      },\n    } = event.currentTarget;\n\n    const contact = { name, number };\n\n    const notDuplicationName = contacts.find(contact => contact.name === name);\n    notDuplicationName !== undefined\n      ? alert(`\"${name}\" is already in contacts.`)\n      : dispatch(addContact(contact));\n\n    event.currentTarget.reset();\n    onSave();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <IconButton type=\"button\" onClick={onSave}>\n        <Icon />\n      </IconButton>\n      <TextField\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <TextField\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </StyledForm>\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { TextField, Button, IconButton, Icon } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledForm = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  '& .MuiTextField-root': {\n    margin: '10px',\n    width: '300px',\n  },\n  '& .MuiButton-root': {\n    margin: '20px',\n  },\n});\n\nexport const EditForm = ({ onSave, values }) => {\n  const { id } = values;\n  const [name, setName] = useState(values.name);\n  const [number, setNumber] = useState(values.number);\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = { id, name, number };\n    const notDuplicationName = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n    notDuplicationName !== undefined\n      ? alert(`\"${name}\" and \"${number}\" is already in contacts.`)\n      : dispatch(editContact(contact));\n\n    event.currentTarget.reset();\n    onSave();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <IconButton type=\"button\" onClick={onSave}>\n        <Icon />\n      </IconButton>\n      <TextField\n        label=\"Name\"\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n      <TextField\n        label=\"Number\"\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Edit contact\n      </Button>\n    </StyledForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  background-color: #fff;\n  padding: 30px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Modal, Overlay } from './ModalContact.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalContact = ({ onClose, edit, values }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', clickCloseModal);\n    return () => {\n      window.removeEventListener('keydown', clickCloseModal);\n    };\n  });\n  const clickCloseModal = event => {\n    if (event.code === 'Escape' || event.target === event.currentTarget) {\n      return onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={clickCloseModal}>\n      <Modal>\n        {!edit ? (\n          <ContactForm onSave={onClose} />\n        ) : (\n          <EditForm onSave={onClose} values={values} />\n        )}\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import { ModalContact } from 'components/ModalContact/ModalContact';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { styled } from '@mui/material/styles';\nimport { Box, ListItem, ListItemText, IconButton } from '@mui/material';\n\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nconst StyledListItem = styled(ListItem)({\n  padding: '16px',\n  borderRadius: '8px',\n  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n  margin: '16px',\n  '&:hover': {\n    backgroundColor: '#F5F5F5',\n  },\n});\n\nexport const ContactItem = ({ contact }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const toggleModal = () => setOpenModal(state => !state);\n  const dispatch = useDispatch();\n  return (\n    <StyledListItem\n      sx={{\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <AccountBoxIcon\n        color=\"primary\"\n        sx={{\n          mr: 1,\n        }}\n      />\n      <ListItemText>\n        {contact.name}: {contact.number}\n      </ListItemText>\n\n      <Box>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"edit\"\n          type=\"button\"\n          onClick={toggleModal}\n          sx={{\n            mr: 1,\n          }}\n        >\n          <BorderColorIcon />\n        </IconButton>\n\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contact.id))}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n      {openModal && (\n        <ModalContact onClose={toggleModal} edit={true} values={contact} />\n      )}\n    </StyledListItem>\n  );\n};\n","export const selectFilter = state => state.filter;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\n\nimport { List } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredPhoneBook = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  return (\n    <List>\n      {filteredPhoneBook.map(contact => {\n        return <ContactItem key={contact.id} contact={contact} />;\n      })}\n    </List>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice';\n\nimport { styled } from '@mui/material/styles';\nimport { InputBase, IconButton } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst SearchBar = styled('form')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: '#f1f3f4',\n  '&:hover': {\n    backgroundColor: '#f5f5f5',\n  },\n  margin: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginTop: '20px',\n    width: '70%',\n  },\n}));\nconst SearchInput = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\nconst SearchButton = styled(IconButton)(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  position: 'absolute',\n  right: 0,\n  top: 0,\n  bottom: 0,\n  color: '#8b8b8b',\n}));\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <SearchBar>\n      <SearchInput\n        value={filter}\n        placeholder=\"Search\"\n        onChange={changeFilter}\n      />\n      <SearchButton type=\"submit\">\n        <SearchIcon />\n      </SearchButton>\n    </SearchBar>\n\n    // <Form>\n    //   <Label>\n    //     <Input\n    //       type=\"text\"\n    //       value={filter}\n    //       placeholder=\"Search\"\n    //       onChange={changeFilter}\n    //     ></Input>\n    //   </Label>\n    // </Form>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ModalContact } from 'components/ModalContact/ModalContact';\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { Box, IconButton } from '@mui/material';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const [openModal, setOpenModal] = useState(false);\n  const toggleModal = () => setOpenModal(state => !state);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 2,\n      }}\n    >\n      <Filter />\n      <IconButton\n        onClick={toggleModal}\n        color=\"secondary\"\n        aria-label=\"add to contact\"\n      >\n        <AddCircleIcon sx={{ fontSize: 60 }} />\n      </IconButton>\n      <>{isLoading && !error && <b>Request in progress...</b>}</>\n      <ContactList />\n      {openModal && <ModalContact onClose={toggleModal} />}\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","StyledForm","styled","display","flexDirection","justifyContent","alignItems","margin","width","ContactForm","onSave","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","currentTarget","elements","name","value","number","contact","notDuplicationName","find","undefined","alert","addContact","reset","IconButton","type","onClick","Icon","TextField","label","pattern","title","required","Button","variant","EditForm","values","id","useState","setName","setNumber","handleChange","target","editContact","onChange","Overlay","Modal","modalRoot","document","querySelector","ModalContact","onClose","edit","useEffect","window","addEventListener","clickCloseModal","removeEventListener","code","createPortal","StyledListItem","ListItem","padding","borderRadius","boxShadow","backgroundColor","ContactItem","openModal","setOpenModal","toggleModal","sx","AccountBox","color","mr","ListItemText","Box","edge","BorderColor","deleteContact","Delete","selectFilter","filter","ContactList","filteredPhoneBook","toLowerCase","includes","trim","List","map","SearchBar","theme","position","shape","breakpoints","up","marginTop","SearchInput","InputBase","spacing","paddingLeft","transition","transitions","create","SearchButton","right","top","bottom","Filter","placeholder","setFilter","Search","Contacts","fetchContacts","gap","AddCircle","fontSize"],"sourceRoot":""}